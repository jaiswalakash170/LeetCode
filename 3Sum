15. 3Sum
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
The solution set must not contain duplicate triplets.

Example:
Given array nums = [-1, 0, 1, 2, -1, -4],
A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> listOfLists = new ArrayList<>();
        int curNum, prevNum, lastNum;
        if(nums.length >= 3)
        {
            for(int i=0; i<nums.length;i++)
            {
                if((i > 0) && (nums[i] == nums[i-1]))
                {
                    continue;
                }
                int low = i+1, high = nums.length-1;
                while(low < high)
                {
                    int sum = nums[low] + nums[high] + nums[i];
                    if(sum > 0)
                    {
                        high--;
                    }
                    else if(sum < 0)
                    {
                        low++;
                    }
                    else
                    {
                        listOfLists.add(Arrays.asList(nums[i], nums[low], nums[high]));
                        low++;
                        while((low < high) && (nums[low] == nums[low-1]))
                        {
                            low++;
                        }
                    }
                }
            } 
        }
        return listOfLists;
    }
}