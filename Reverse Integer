7. Reverse Integer
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:
Input: 123
Output: 321

Example 2:
Input: -123
Output: -321
Example 3:
Input: 120
Output: 21

Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

class Solution {
    public int reverse(int x) {
        int absVal = Math.abs(x), finalVal = 0, cntBits = 0;
        if(x > Integer.MAX_VALUE || x < Integer.MIN_VALUE)
        {
            return 0;
        }
        while(absVal != 0)
        {
            int tempFinal = (finalVal*10) + (absVal%10);
            if((tempFinal - (absVal%10)) / 10 != finalVal)
            {
                return 0;
            }
            finalVal = tempFinal;
            absVal /= 10;
        }
        return (x < 0) ? -finalVal : finalVal;
    }
}